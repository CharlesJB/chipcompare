% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/chipcompare-package.r, R/chipcompare.R
\docType{package}
\name{chipcompare}
\alias{chipcompare}
\alias{chipcompare-package}
\title{chipcompare.}
\format{An overlap calculator}
\usage{
chipcompare
}
\value{
\code{chipcompare$new} returns a \code{chipcompare} object that contains the
 \code{GRangesList} object(s) used to produce the overlap matrix and the
 overlap matrix.
}
\description{
chipcompare.

This class allows to produce an overlap matrix of multiple genomic regions
and it's visual representation in the heatmap format. For each pairs of
regions, this object will calculate the percentage of overlapping regions.
}
\section{Constructor}{

\describe{
  \item{}{\code{cc <- chipcompare$new(grl1, grl2 = NULL, heatmap=TRUE,
                                      ...)}}
  \item{grl1:}{A \code{GRangesList} object.}
  \item{grl2:}{A \code{GRangesList} object. If value is \code{NULL}, all the
              regions in \code{grl1} will be compared against themselves.
              Default: \code{NULL}.}
  \item{heatmap:}{Print heatmap. Default: \code{TRUE}}
  \item{cores:}{Number of cores for parallel processing. Default: 1}
  \item{FUN:}{The function to compute the scores. Must take 2 \code{GRanges}
              as input and return a numeric as output.}
  \item{...:}{Extra options to pass to \code{FUN}.}
}
}

\section{Methods}{

\describe{
  \item{}{\code{m <- cc$get_matrix()}}
}
\describe{
  \item{}{\code{cc$print(...)}}
  \item{...:}{Extra options to pass to \code{heatmap.2} function.}
}
\describe{
  \item{}{\code{pval <- cc$pvalue(baseline, sample_count = 1000)}}
  \item{baseline:}{A \code{GRanges} object to use as backgroud.}
  \item{sample_count:}{The number of draw to use for bootstrap.}
}
}
\examples{
# Prepare the GRangesList object
 gr1 <- GRanges("chr1", IRanges(c(1,100),c(10,110)))
 gr2 <- GRanges("chr1", IRanges(c(2,200),c(8,210)))
 gr3 <- GRanges(c("chr1", "chr2"), IRanges(c(1,100),c(10,110)))
 gr4 <- GRanges("chr3", IRanges(1,1000))
 grl <- GRangesList(gr1, gr2, gr3, gr4)

 # Create a chipcompare object
 cc <- chipcompare$new(grl, heatmap = FALSE)

 # Extract the overlap matrix
 m <- cc$get_matrix()
 mg <- metagene$new(regions, bam_files)

 # Draw a heatmap
 \dontrun{cc$print()}
 \dontrun{cc}

 # Calculate p-values. In this case we would need a GRanges object that
 # represent baseline values. For example, it could be a list of every
 # regions that were detected in the current cell line with other ChIP-Seq
 # experiments.
 \dontrun{pval <- cc$pvalue(baseline)}
}
\keyword{datasets}

